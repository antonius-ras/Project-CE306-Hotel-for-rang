import React, { useState } from 'react';
import { useParams } from 'react-router-dom';

export const MOCK_HOTEL_DATA = {
    '1': {
        id: '1',
        title: 'Holiday Inn Bangkok',
        location: '971 Phloen Chit Road, Lumpini Pathum Wan, Bangkok 10330 Thailand',
        rating: 4.5,
        description:
            '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏´‡∏±‡∏®‡∏à‡∏£‡∏£‡∏¢‡πå‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÄ‡∏û‡∏µ‡∏¢‡∏á 35 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏à‡∏≤‡∏Å‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏¥‡∏ô‡∏™‡∏∏‡∏ß‡∏£‡∏£‡∏ì‡∏†‡∏π‡∏°‡∏¥‡πÅ‡∏•‡∏∞‡∏î‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡∏≠‡∏á ‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏Å‡∏±‡∏ö‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤‡πÄ‡∏ã‡πá‡∏ô‡∏ó‡∏£‡∏±‡∏•‡πÄ‡∏ß‡∏¥‡∏•‡∏î‡πå ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏µ‡∏Å‡∏´‡∏ô‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡∏∏‡πà‡∏ô‡∏ß‡∏≤‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢',
        imageUrl: '/hotel1/hotel1.png',
        amenities: ['Life Support', 'Zero Gravity Gym', 'Advanced Telescope'],
        numberOfReviews: 5,
        roomTypes: [
            { name: '‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏µ‡∏¢‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß', price: 3000 },
            { name: '‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏µ‡∏¢‡∏á‡∏Ñ‡∏π‡πà', price: 3500 },
        ],
    },
    '2': {
        id: '2',
        title: 'City Center Tower',
        location: '‡πÄ‡∏û‡∏•‡∏¥‡∏ô‡∏à‡∏¥‡∏ï, ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
        rating: 4.5,
        description:
            '‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢‡πÉ‡∏à‡∏Å‡∏•‡∏≤‡∏á‡∏¢‡πà‡∏≤‡∏ô‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÄ‡∏ô‡πâ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏£‡∏π‡∏´‡∏£‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢ ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏á‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏™‡∏ö‡∏≤‡∏¢',
        imageUrl: '/hotel2/hotel2.png',
        amenities: ['Free WiFi', 'Breakfast Included', 'Business Center', 'Rooftop Bar'],
        numberOfReviews: 320,
        roomTypes: [
            { name: '‡∏´‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô', price: 3500 },
            { name: '‡∏´‡πâ‡∏≠‡∏á‡∏î‡∏µ‡∏•‡∏±‡∏Å‡∏ã‡πå', price: 4200 },
            { name: '‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏ß‡∏µ‡∏ó', price: 5000 },
        ],
    },
    '3': {
        id: '3',
        title: 'Seaside Serenity Resort',
        location: '‡∏´‡∏±‡∏ß‡∏´‡∏¥‡∏ô, ‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå',
        rating: 4.9,
        description: '‡∏£‡∏µ‡∏™‡∏≠‡∏£‡πå‡∏ó‡∏£‡∏¥‡∏°‡∏ó‡∏∞‡πÄ‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏á‡∏µ‡∏¢‡∏ö‡∏™‡∏á‡∏ö ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ß‡∏¥‡∏ß‡∏ó‡∏∞‡πÄ‡∏•‡∏≠‡∏±‡∏ô‡∏á‡∏î‡∏á‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏´‡∏≤‡∏î‡∏ó‡∏£‡∏≤‡∏¢‡∏Ç‡∏≤‡∏ß‡∏™‡∏∞‡∏≠‡∏≤‡∏î',
        imageUrl: '/hotel3/hotel3.png',
        amenities: ['Beach Access', 'Private Balcony', 'Swimming Pool', 'Massage'],
        numberOfReviews: 450,
        roomTypes: [
            { name: '‡∏´‡πâ‡∏≠‡∏á‡∏£‡∏¥‡∏°‡∏ó‡∏∞‡πÄ‡∏•', price: 4200 },
            { name: '‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏π‡∏•‡∏ß‡∏¥‡∏•‡∏•‡πà‡∏≤', price: 6000 },
        ],
    },
    '4': {
        id: '4',
        title: 'Mountain View Lodge',
        location: '‡∏õ‡∏≤‡∏¢, ‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô',
        rating: 4.7,
        description:
            '‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏•‡∏≠‡∏ü‡∏ó‡πå‡∏ó‡πà‡∏≤‡∏°‡∏Å‡∏•‡∏≤‡∏á‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ß‡∏¥‡∏ß‡∏†‡∏π‡πÄ‡∏Ç‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏ö‡∏£‡∏¥‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡πå',
        imageUrl: '/hotel4/hotel4.png',
        amenities: ['Hiking Trails', 'Fireplace', 'Hot Tub', 'Free Breakfast'],
        numberOfReviews: 210,
        roomTypes: [
            { name: '‡∏´‡πâ‡∏≠‡∏á‡∏ß‡∏¥‡∏ß‡∏†‡∏π‡πÄ‡∏Ç‡∏≤', price: 2800 },
            { name: '‡∏´‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏á', price: 3200 },
        ],
    },
    '5': {
        id: '5',
        title: 'Urban Chic Hotel',
        location: '‡∏™‡∏µ‡∏•‡∏°, ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
        rating: 4.3,
        description:
            '‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢‡πÉ‡∏ô‡∏¢‡πà‡∏≤‡∏ô‡πÉ‡∏à‡∏Å‡∏•‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡∏≠‡∏á ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡πÅ‡∏•‡∏∞‡∏ô‡∏±‡∏Å‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏™‡∏ö‡∏≤‡∏¢',
        imageUrl: '/hotel5/hotel5.png',
        amenities: ['Gym', 'Rooftop Pool', 'Free WiFi', '24-hour Front Desk'],
        numberOfReviews: 150,
        roomTypes: [
            { name: '‡∏´‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô', price: 3000 },
            { name: '‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏≠‡πá‡∏Å‡πÄ‡∏ã‡∏Å‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏µ‡∏ü', price: 3800 },
        ],
    },
};

const HotelDetailPage: React.FC = () => {
    const { hotelId } = useParams<{ hotelId: string }>();
    const hotel = MOCK_HOTEL_DATA[hotelId as keyof typeof MOCK_HOTEL_DATA];

    const [checkInDate, setCheckInDate] = useState('');
    const [checkOutDate, setCheckOutDate] = useState('');
    const [guests, setGuests] = useState(1);
    const [selectedRoom, setSelectedRoom] = useState(0);

    if (!hotel) {
        return (
            <div className="text-center p-10 text-red-600 text-2xl">
                ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏° (ID: {hotelId || 'N/A'})
            </div>
        );
    }

    const handleBookingSubmit = (e: React.FormEvent) => {
        e.preventDefault();
        const room = hotel.roomTypes[selectedRoom];

        console.log('--- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ ---');
        console.log(`‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°: ${hotel.title} (ID: ${hotel.id})`);
        console.log(`‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á: ${room.name}`);
        console.log(`‡∏£‡∏≤‡∏Ñ‡∏≤: ${room.price}`);
        console.log(`‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô: ${checkInDate}`);
        console.log(`‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå: ${checkOutDate}`);
        console.log(`‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏Ç‡∏Å: ${guests}`);
        console.log('--- END ---');

        alert(`‡∏à‡∏≠‡∏á ${hotel.title} (${room.name}) ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!`);
    };

    return (
        <div className="min-h-screen bg-gray-50 p-6 lg:p-12">
            <div className="max-w-6xl mx-auto bg-white shadow-xl rounded-lg overflow-hidden">
                {/* ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û */}
                <div className="relative h-96">
                    <img
                        src={hotel.imageUrl}
                        alt={hotel.title}
                        className="w-full h-full object-cover"
                    />
                    <div className="absolute inset-0 bg-black bg-opacity-30 flex items-end p-6">
                        <h1 className="text-4xl font-bold text-white drop-shadow-lg">
                            {hotel.title}
                        </h1>
                    </div>
                </div>

                <div className="p-8 lg:flex lg:space-x-8">
                    {/* ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î */}
                    <div className="lg:w-2/3 space-y-8">
                        <section>
                            <h2 className="text-2xl font-semibold text-gray-800 mb-3">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</h2>
                            <p className="text-gray-600 mb-4">{hotel.description}</p>

                            <div className="flex items-center space-x-4 text-lg font-medium text-gray-700">
                                <span className="text-yellow-500">‚≠ê {hotel.rating}</span>
                                <span>|</span>
                                <span>{hotel.numberOfReviews} ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</span>
                                <span>|</span>
                                <span>üìç {hotel.location}</span>
                            </div>
                        </section>

                        <hr />

                        {/* ‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å */}
                        <section>
                            <h2 className="text-2xl font-semibold text-gray-800 mb-3">
                                ‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å
                            </h2>
                            <div className="flex flex-wrap gap-4">
                                {hotel.amenities.map((item) => (
                                    <span
                                        key={item}
                                        className="bg-blue-100 text-blue-800 text-sm font-medium px-3 py-1 rounded-full"
                                    >
                                        {item}
                                    </span>
                                ))}
                            </div>
                        </section>
                    </div>

                    {/* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á */}
                    <div className="lg:w-1/3 mt-10 lg:mt-0">
                        <div className="sticky top-10 p-6 bg-gray-100 rounded-lg shadow-md border border-gray-200">
                            <div className="text-3xl font-bold text-gray-900 mb-4">
                                ‡∏ø{hotel.roomTypes[selectedRoom].price.toLocaleString()}
                                <span className="text-base font-normal text-gray-500"> / ‡∏Ñ‡∏∑‡∏ô</span>
                            </div>

                            <form onSubmit={handleBookingSubmit} className="space-y-4">
                                <div>
                                    <label
                                        htmlFor="roomType"
                                        className="block text-sm font-medium text-gray-700"
                                    >
                                        ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á
                                    </label>
                                    <select
                                        id="roomType"
                                        value={selectedRoom}
                                        onChange={(e) => setSelectedRoom(parseInt(e.target.value))}
                                        className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2"
                                    >
                                        {hotel.roomTypes.map((room, index) => (
                                            <option key={index} value={index}>
                                                {room.name} ‚Äî ‡∏ø{room.price.toLocaleString()}
                                            </option>
                                        ))}
                                    </select>
                                </div>

                                <div>
                                    <label
                                        htmlFor="checkin"
                                        className="block text-sm font-medium text-gray-700"
                                    >
                                        ‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô
                                    </label>
                                    <input
                                        type="date"
                                        id="checkin"
                                        value={checkInDate}
                                        onChange={(e) => setCheckInDate(e.target.value)}
                                        className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2"
                                        required
                                    />
                                </div>

                                <div>
                                    <label
                                        htmlFor="checkout"
                                        className="block text-sm font-medium text-gray-700"
                                    >
                                        ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå
                                    </label>
                                    <input
                                        type="date"
                                        id="checkout"
                                        value={checkOutDate}
                                        onChange={(e) => setCheckOutDate(e.target.value)}
                                        className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2"
                                        required
                                    />
                                </div>

                                <div>
                                    <label
                                        htmlFor="guests"
                                        className="block text-sm font-medium text-gray-700"
                                    >
                                        ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏Ç‡∏Å
                                    </label>
                                    <input
                                        type="number"
                                        id="guests"
                                        min="1"
                                        value={guests}
                                        onChange={(e) => setGuests(parseInt(e.target.value))}
                                        className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2"
                                        required
                                    />
                                </div>

                                <button
                                    type="submit"
                                    className="w-full py-3 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 transition duration-150"
                                    >
                                    ‡∏à‡∏≠‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                                </button>
                            </form>
                            <p className="text-xs text-center text-gray-500 mt-3">
                                ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default HotelDetailPage;
